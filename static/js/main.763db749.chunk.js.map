{"version":3,"sources":["Components/Header/img/comic.png","Components/Header/Navbar.js","Components/footer/index.jsx","Components/Showcase/img/s.png","Components/Showcase/img/showcase-sub2.jpg","pages/Homepage.js","Components/Header-about/Header.js","Components/Info-about/Info.js","pages/About.js","App.js","scrollAnimation.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","Footer","target","Homepage","Header","data-scroll","data-scroll-speed","Info","style","marginTop","Ab","Fragment","height","App","gsap","registerPlugin","ScrollTrigger","React","useEffect","scroll","LocomotiveScroll","el","document","querySelector","smooth","multiplier","on","update","scrollerProxy","scrollTop","value","arguments","length","scrollTo","instance","y","getBoundingClientRect","top","left","width","window","innerWidth","innerHeight","pinType","transform","set","opacity","tl","timeline","defaults","ease","to","duration","stagger","create","trigger","scroller","animation","tlb","tlc","t2","t3","addEventListener","refresh","scrollAnimation","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.763db749.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/comic.937ffedc.png\";","import {Link} from 'react-router-dom'\r\n\r\nimport './header.css'\r\n\r\nconst Navbar = () => {\r\n    return (  <div className=\"container-large nav-wrapper\"> \r\n    <nav>\r\n      <div className='logo hover-this'> \r\n        <h1><a href=\"/\">Kir.</a></h1> \r\n      </div>\r\n      <ul className='nav-links'>\r\n        <li>\r\n          <a href=\"/about\">about</a>\r\n        </li>\r\n        {/* <li>\r\n          <button>darkmode</button>\r\n        </li> */}\r\n        <div className=\"curso\"></div>\r\n      </ul>\r\n    </nav></div> );\r\n}\r\n \r\nexport default Navbar;","import './footer.css'\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container-large\">\r\n                <div className=\"contact-footer\">\r\n                    <h3>Let's build something great together.\r\n                    </h3>\r\n                    <p>\r\n                        If you'd like to start a new project, need help with an existing project or have any other enquiry, please get in touch.\r\n                    </p>\r\n                    <a href=\"mailto:kirankumargs02@gmail.com\"  target=\"_blank\"> \r\n                        kirankumargs02@gmail.com\r\n                    </a>\r\n                </div>\r\n                <div className=\"main-footer\">\r\n                    <div className='logo'> \r\n                        <a href=\"/\">Kir.</a> \r\n                    </div>\r\n                    <ul className='footer-links'>\r\n                        <li>\r\n                        <a href=\"\">github</a>\r\n                        </li>\r\n                        <li>\r\n                        <a href=\"\">linkedin</a>\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n            </div> \r\n            <span>Inspired by @nurpais</span>\r\n        </div>);\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/s.e1ec8d47.png\";","export default __webpack_public_path__ + \"static/media/showcase-sub2.33340aa0.jpg\";","import React from 'react'; \r\nimport Header from '../Components/Header/Header';\r\nimport Showcase from '../Components/Showcase/Showcase'; \r\nimport About from '../Components/About';\r\nimport Footer from '../Components/footer';\r\n\r\nfunction Homepage() {\r\n \r\n  return (\r\n    <React.Fragment //className={`app ${theme()}`}\r\n    >\r\n      <Header //offsetY={offsetY}\r\n       />\r\n      <Showcase //offsetY={offsetY}\r\n      />\r\n      <About />\r\n      <Footer />\r\n      {/* <div className=\"space\" style={{height:'100px',background:'#000'}}></div> */}\r\n      {/* <img src={like}/> */}\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import './header.css'\r\n\r\nconst Header = () => {\r\n    return (   <div className=\"container-large\">\r\n        <div className=\"head\">\r\n            \r\n    <h2>About me\r\n    </h2>\r\n    <p data-scroll data-scroll-speed=\"3\">I'm Kiran,\r\n        a creative front-end developer.   </p>\r\n    \r\n        </div>\r\n</div> );\r\n}\r\n \r\nexport default Header;","import './info.css'\r\n\r\nconst Info = () => {\r\n  return (\r\n    <div\r\n      className='info' //data-scroll-container\r\n    >\r\n      <div\r\n        className='container-large' //data-scroll-section\r\n      >\r\n        <div className='info-sec'>\r\n          <div className='info-row'>\r\n          <div className='info-col'>\r\n          <h2 className='info-title'> \r\n          {/* //data-scroll data-scroll-speed='3'> */}\r\n              Languages\r\n            </h2>\r\n            <p>\r\n              I utilize the following programming languages to build the\r\n              backbone of effeicient, future-proof websites.\r\n            </p>\r\n            <div className=\"info-lists\">\r\n            <ul className='info-list'>\r\n              <li>HTML5</li>\r\n              <li>CSS3</li>\r\n              <li>SCSS </li>  \r\n              </ul>\r\n            <ul className='info-list'>\r\n              <li>JavaScript</li>\r\n              <li>Webpack</li>\r\n              <li>Git</li>\r\n            </ul>\r\n            </div> \r\n          </div>  \r\n          <div className='info-col'>\r\n          <h2 className='info-title'> \r\n          {/* //data-scroll data-scroll-speed='3'> */}\r\n              Platforms\r\n            </h2>\r\n            <p>I also use the following platforms and tools.</p>\r\n\r\n            <div className=\"info-lists\" style={{marginTop:'25px'}}>\r\n            <ul className='info-list'>\r\n              <li>Bootstrap</li>\r\n              <li>Material UI</li>\r\n              <li>React / Next </li>  \r\n              </ul>\r\n            <ul className='info-list'>\r\n              <li>GSAP</li>\r\n              <li>NodeJs</li>\r\n              <li>API's</li>\r\n            </ul>\r\n            </div> \r\n          </div>  \r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react'\r\nimport About from '../Components/About'\r\nimport Footer from '../Components/footer'\r\nimport Header from '../Components/Header-about/Header'\r\nimport Navbar from '../Components/Header/Navbar'\r\nimport Info from '../Components/Info-about/Info'\r\n\r\nfunction Ab() {\r\n  return (\r\n    <React.Fragment //className={`app ${theme()}`}\r\n    >\r\n      <Navbar //offsetY={offsetY}\r\n      />\r\n      <Header />\r\n      <Info />\r\n      <div className=\"space\" style={{height:'200px'}}></div>\r\n      <Footer />\r\n      {/* <img src={like}/> */}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Ab\r\n","import React from 'react'; \nimport './base.css';\n// import Header from './Components/Header/Header';\n// import Showcase from './Components/Showcase/Showcase';\n// import like from './like.svg' \nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport gsap from 'gsap'\nimport { ScrollTrigger } from 'gsap/all';\n// import LocomotiveScroll from 'locomotive-scroll';\n// import About from './Components/About';\n// import Footer from './Components/footer';\nimport Homepage from './pages/Homepage';\nimport Ab from './pages/About';\nimport scrollAnimation from './scrollAnimation'\n\nfunction App() { \n    gsap.registerPlugin(ScrollTrigger) \n   \n    React.useEffect(()=>{ \n      scrollAnimation()\n    },[])\n\n  return (\n    <React.Fragment> \n    <Ab />\n      {/* <Route exact path=\"/\" component={Ab} /> */}\n      {/* <Route exact path=\"/about\" component={Ab} /> */}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import gsap from 'gsap'\r\nimport { ScrollTrigger } from 'gsap/all';\r\nimport LocomotiveScroll from 'locomotive-scroll';\r\n\r\nexport default function() {\r\n    const scroll = new LocomotiveScroll({\r\n        el: document.querySelector('[data-scroll-container]'),\r\n        smooth: true,\r\n        multiplier:0.8\r\n      });\r\n\r\n      scroll.on(\"scroll\", ScrollTrigger.update);\r\n      ScrollTrigger.scrollerProxy(\"[data-scroll-container]\", {\r\n        scrollTop(value) {\r\n          return arguments.length ? scroll.scrollTo(value, 0, 0) :    scroll.scroll.instance.scroll.y;\r\n          }, // we don't have to define a scrollLeft because we're only scrolling vertically.\r\n          getBoundingClientRect() {\r\n            return {top: 0, left: 0, width: window.innerWidth, height: window.innerHeight};\r\n          },  // LocomotiveScroll handles things completely differently on mobile devices - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters, we should pin things with position: fixed on mobile. We sense it by checking to see if there's a transform applied to the container (the LocomotiveScroll-controlled element).\r\n          pinType: document.querySelector(\"[data-scroll-container]\").style.transform ? \"transform\" : \"fixed\"\r\n        });\r\n\r\n        gsap.set(\".first-col\",{y:50,opacity:0})\r\n        gsap.set(\".sec-col\",{y:50,opacity:0})\r\n        gsap.set(\".third-col\",{y:50,opacity:0})\r\n        gsap.set(\".contact-footer\",{y:100,opacity:0})\r\n        gsap.set(\".main-footer\",{y:-50,opacity:0})\r\n\r\n        let tl = gsap.timeline({defaults:{ease:\"none\"}})\r\n          .to(\".first-col\", {y:0,opacity:1, duration:1,stagger:.1}) \r\n\r\n          ScrollTrigger.create({\r\n            trigger:\".about-row\",\r\n            // start:\"0%\",\r\n            // end:\"+=300\",\r\n            scroller:\"[data-scroll-container]\",\r\n            animation:tl,\r\n            // scrub:true,\r\n            // pin:true\r\n          })\r\n          \r\n        let tlb = gsap.timeline({defaults:{ease:\"none\"}})\r\n        .to(\".sec-col\", {y:0,opacity:1, duration:1,stagger:.1}) \r\n        ScrollTrigger.create({\r\n          trigger:\".sec-col\",\r\n          // start:\"0%\",\r\n          // end:\"+=300\",\r\n          scroller:\"[data-scroll-container]\",\r\n          animation:tlb,\r\n          // scrub:true,\r\n          // pin:true\r\n        })\r\n\r\n        let tlc = gsap.timeline({defaults:{ease:\"none\"}})\r\n        .to(\".third-col\", {y:0,opacity:1, duration:1,stagger:.1}) \r\n        ScrollTrigger.create({\r\n          trigger:\".third-col\",\r\n          // start:\"0%\",\r\n          // end:\"+=300\",\r\n          scroller:\"[data-scroll-container]\",\r\n          animation:tlc,\r\n          // scrub:true,\r\n          // pin:true\r\n        })\r\n\r\n          let t2 = gsap.timeline({defaults:{ease:\"none\"}})\r\n          .to(\".contact-footer\", {y:0,opacity:1, duration:1}) \r\n\r\n          ScrollTrigger.create({\r\n            trigger:\".contact-footer\",\r\n            // start:\"0%\",\r\n            // end:\"+=300\",\r\n            scroller:\"[data-scroll-container]\",\r\n            animation:t2,\r\n            // scrub:true,\r\n            // pin:true\r\n          })\r\n\r\n          let t3 = gsap.timeline({defaults:{ease:\"none\"}})\r\n          .to(\".main-footer\", {y:0,opacity:1, duration:1}) \r\n\r\n          ScrollTrigger.create({\r\n            trigger:\".main-footer\",\r\n            // start:\"0%\",\r\n            // end:\"+=300\",\r\n            scroller:\"[data-scroll-container]\",\r\n            animation:t3,\r\n            // scrub:true,\r\n            // pin:true\r\n          })\r\n\r\n          // each time the window updates, we should refresh ScrollTrigger and then update LocomotiveScroll. \r\n          ScrollTrigger.addEventListener(\"refresh\", () => scroll.update());\r\n\r\n          // after everything is set up, refresh() ScrollTrigger and update LocomotiveScroll because padding may have been added for pinning, etc.\r\n          ScrollTrigger.refresh(); \r\n\r\n    // window.addEventListener(\"scroll\",handleScroll) \r\n    //return () => window.removeEventListener(\"scroll\",handleScroll)\r\n\r\n      // // Get the id of the <path> element and the length of <path>\r\n      // var triangle = document.getElementById(\"triangle\");\r\n      // var length = triangle.getTotalLength();\r\n      \r\n      // // The start position of the drawing\r\n      // triangle.style.strokeDasharray = length;\r\n      \r\n      // // Hide the triangle by offsetting dash. Remove this line to show the triangle before scroll draw\r\n      // triangle.style.strokeDashoffset = length;\r\n      \r\n      // function myFunction() {\r\n      // var scrollpercent = (document.body.scrollTop + document.documentElement.scrollTop) / (document.documentElement.scrollHeight - document.documentElement.clientHeight);\r\n      \r\n      //   var draw = length * scrollpercent;\r\n        \r\n      //   // Reverse the drawing (when scrolling upwards)\r\n      //   triangle.style.strokeDashoffset = length - draw;\r\n      // }\r\n\r\n      //  // Find scroll percentage on scroll (using cross-browser properties), and offset dash same amount as percentage scrolled\r\n      //  window.addEventListener(\"scroll\",myFunction)\r\n      // //  window.addEventListener(\"scroll\",handleScroll) \r\n      \r\n      // return () => window.removeEventListener(\"scroll\",myFunction)\r\n\r\n\r\n    // window.addEventListener(\"scroll\",(e)=>{\r\n      //      myFunction()\r\n      //      handleScroll()\r\n      //    })\r\n      //   //  window.addEventListener(\"scroll\",handleScroll) \r\n        \r\n      // return () => {\r\n      //  return window.removeEventListener(\"scroll\",(e)=>{\r\n      //     myFunction()\r\n      //     handleScroll()\r\n      //   })\r\n      // }\r\n\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import './scss/main.sass'\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}